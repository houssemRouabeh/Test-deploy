<%- include('partial/header') %>

<main>
  <div class="cart-container">
    <h1>Votre Panier</h1>

    <div id="cartItems" class="cart-items">
      <!-- Les éléments du panier seront injectés ici -->
    </div>

    <div class="cart-summary">
      <h3>Récapitulatif</h3>
      <p>Total articles: <span id="totalQuantity">0</span></p>
      <p>Montant total: <span id="totalAmount">0.00</span> €</p>

      <div class="cart-actions">
        <button id="confirmOrder" class="btn-confirm">
          Confirmer la commande
        </button>
        <button id="proceedToPayment" class="btn-payment">
          Procéder au paiement
        </button>
      </div>
    </div>
  </div>
</main>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const cartItems = document.getElementById("cartItems");
    const totalQuantity = document.getElementById("totalQuantity");
    const totalAmount = document.getElementById("totalAmount");
    const confirmOrderBtn = document.getElementById("confirmOrder");
    const paymentBtn = document.getElementById("proceedToPayment");

    // Charger les réservations
    const reservations =
      JSON.parse(localStorage.getItem("treeReservations")) || [];

    // Afficher les réservations
    function displayReservations() {
      cartItems.innerHTML = "";
      let totalQty = 0;
      let total = 0;

      if (reservations.length === 0) {
        cartItems.innerHTML = '<p class="empty-cart">Votre panier est vide</p>';
        return;
      }

      reservations.forEach((item, index) => {
        const itemTotal = item.quantity * item.price;
        totalQty += item.quantity;
        total += itemTotal;

        const itemElement = document.createElement("div");
        itemElement.className = "cart-item";
        itemElement.innerHTML = `
          <div class="item-info">
            <h3>${item.treeName}</h3>
            <p>Campagne: ${item.campaignName}</p>
            <p>Quantité: ${item.quantity}</p>
            <p>Prix unitaire: ${item.price.toFixed(2)} €</p>
          </div>
          <div class="item-total">
            <p>${itemTotal.toFixed(2)} €</p>
            <button class="remove-item" data-index="${index}">×</button>
          </div>
        `;
        cartItems.appendChild(itemElement);
      });

      totalQuantity.textContent = totalQty;
      totalAmount.textContent = total.toFixed(2);
    }

    displayReservations();

    // Gestion suppression d'articles
    cartItems.addEventListener("click", function (e) {
      if (e.target.classList.contains("remove-item")) {
        const index = parseInt(e.target.dataset.index);
        reservations.splice(index, 1);
        localStorage.setItem("treeReservations", JSON.stringify(reservations));
        displayReservations();
      }
    });
    // Confirmer la commande
    confirmOrderBtn.addEventListener("click", async function () {
      const reservations =
        JSON.parse(localStorage.getItem("treeReservations")) || [];

      if (reservations.length === 0) {
        showMessage("error", "Votre panier est vide");
        return;
      }

      try {
        confirmOrderBtn.disabled = true;
        confirmOrderBtn.innerHTML =
          '<span class="spinner"></span> Confirmation...';

        const response = await fetch("/confirm-order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          credentials: "include", // ← cookies envoyés
          body: JSON.stringify({ reservations }),
        });

        if (response.status === 401) {
          // Rediriger vers la page de login si non autorisé
          window.location.href = "/login";
          return;
        }

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.message || "Erreur lors de la confirmation");
        }

        showMessage("success", data.message);
        localStorage.removeItem("treeReservations");
        setTimeout(() => window.location.reload(), 1500);
      } catch (error) {
        console.error("Erreur:", error);
        showMessage("error", error.message || "Erreur lors de la confirmation");
      } finally {
        confirmOrderBtn.disabled = false;
        confirmOrderBtn.textContent = "Confirmer la commande";
      }
    });

    // Fonction pour récupérer les cookies
    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(";").shift();
    }
    // Paiement
    paymentBtn.addEventListener("click", function () {
      // Rediriger vers la page de paiement
      window.location.href = "/payment";
    });
  });
  // Fonction pour afficher les messages
  function showMessage(type, text, duration = 3000) {
    const messageDiv = document.createElement("div");
    messageDiv.className = `alert alert-${type}`;
    messageDiv.innerHTML = `
    <p>${text}</p>
    <span class="close-message">&times;</span>
  `;

    document.body.appendChild(messageDiv);

    // Fermer le message
    messageDiv.querySelector(".close-message").addEventListener("click", () => {
      messageDiv.remove();
    });

    // Disparaître après un délai
    setTimeout(() => {
      messageDiv.remove();
    }, duration);

    return messageDiv;
  }

  // Styles pour les messages
  const style = document.createElement("style");
  style.textContent = `
  .alert {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 20px;
    border-radius: 5px;
    color: white;
    z-index: 1000;
    box-shadow: 0 2px 10px rgba(0,0,0,0.2);
    animation: slideIn 0.3s ease-out;
  }
  .alert-success { background-color: #28a745; }
  .alert-error { background-color: #dc3545; }
  .close-message {
    float: right;
    margin-left: 15px;
    cursor: pointer;
  }
  @keyframes slideIn {
    from { transform: translateX(100%); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
  }
`;
  document.head.appendChild(style);
</script>

<style>
  .cart-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .cart-items {
    margin-bottom: 30px;
  }

  .empty-cart {
    text-align: center;
    padding: 40px;
    color: #666;
  }

  .cart-item {
    display: flex;
    justify-content: space-between;
    padding: 15px;
    border-bottom: 1px solid #eee;
  }

  .item-info h3 {
    margin-top: 0;
  }

  .item-total {
    text-align: right;
  }

  .remove-item {
    background: none;
    border: none;
    color: #d32f2f;
    font-size: 1.5em;
    cursor: pointer;
    padding: 0 10px;
  }

  .cart-summary {
    background: #f9f9f9;
    padding: 20px;
    border-radius: 5px;
  }

  .cart-actions {
    display: flex;
    gap: 15px;
    margin-top: 20px;
  }

  .btn-confirm,
  .btn-payment {
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1em;
    flex: 1;
  }

  .btn-confirm {
    background-color: #4caf50;
    color: white;
  }

  .btn-payment {
    background-color: #2196f3;
    color: white;
  }
  .spinner {
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 1s ease-in-out infinite;
    margin-right: 8px;
    vertical-align: middle;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>

<%- include('partial/footer') %>
